// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  attempts  UserAttempt[]
  sessions  StudySession[]
  
  @@map("users")
}

model Question {
  id          String   @id @default(cuid())
  question    String
  option1     String
  option2     String
  option3     String
  option4     String
  option5     String?  // Optional 5th option for 5-6 choice questions
  option6     String?  // Optional 6th option for 6 choice questions
  correctAnswers String  // JSON array of correct option numbers (e.g., "[0,2]" for multiple correct answers)
  explanation String?
  keywords    String?  // JSON array of key concepts
  difficulty  String   @default("medium") // easy, medium, hard
  topic       String   // e.g., "EC2", "S3", "VPC", etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  attempts    UserAttempt[]
  
  @@map("questions")
}

model UserAttempt {
  id          String   @id @default(cuid())
  questionId  String
  userId      String
  selectedAnswers String // JSON array of selected option numbers
  isCorrect   Boolean
  timeSpent   Int      // in seconds
  createdAt   DateTime @default(now())
  
  // Relations
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_attempts")
}

model StudySession {
  id          String   @id @default(cuid())
  userId      String
  totalQuestions Int
  correctAnswers Int
  incorrectAnswers Int
  timeSpent   Int      // in seconds
  createdAt   DateTime @default(now())
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("study_sessions")
}
